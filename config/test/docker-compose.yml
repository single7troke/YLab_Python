version: "3.8"

services:

  web-app:
    user: "1000:1000"
    build:
      context: ../../app
    volumes:
      - ../../app:/app
    env_file:
      - .env
    ports:
      - "8001:8000"
    networks:
      - test_web
    entrypoint: sh -c "alembic upgrade head && python3 main.py"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  db:
    image: postgres:15.1-alpine
    env_file:
      - .env
    expose:
      - "5432"
    networks:
      - test_web
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
      interval: 5s
      timeout: 15s
      retries: 5
      start_period: 30s

  tests:
    user: "1000:1000"
    build:
      context: ../../test
    volumes:
      - ../../test:/test
    env_file:
      - .env
    networks:
      - test_web
    entrypoint: sh -c "sleep 5 && pytest -v"
    depends_on:
      web-app:
        condition: service_started

  redis:
    image: "redis:alpine"
    expose:
      - "6379"
    networks:
        - test_web
    healthcheck:
      test: [ "CMD", "redis-cli","ping" ]
      interval: 5s
      timeout: 15s
      retries: 5
      start_period: 30s


networks:
  test_web:
    name: test_web
    external: false
